{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asmaa\\\\OneDrive\\\\Desktop\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useOutletContext } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  const {\n    event\n  } = useOutletContext();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_s(EventDetailPage, \"JBn/AMsnbltaYRi8zrwiJOH7aWg=\", false, function () {\n  return [useOutletContext];\n});\n_c = EventDetailPage;\nexport async function loader({\n  params\n}) {\n  const response = await fetch(`http://localhost:8080/events/${params.id}`);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch detail for the selected event'\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useOutletContext","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","params","response","fetch","id","ok","Response","JSON","stringify","message","status","resData","json","$RefreshReg$"],"sources":["C:/Users/asmaa/OneDrive/Desktop/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nexport default function EventDetailPage() {\r\n    const { event } = useOutletContext();\r\n    return (\r\n        <EventItem event={event} />\r\n    );\r\n}\r\n\r\nexport async function loader({ params }) {\r\n    const response = await fetch(`http://localhost:8080/events/${params.id}`);\r\n    if (!response.ok) {\r\n        throw new Response(JSON.stringify({ message: 'Could not fetch detail for the selected event' }), { status: 500 });\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData;\r\n    }\r\n}"],"mappings":";;AACA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAM,CAAC,GAAGN,gBAAgB,CAAC,CAAC;EACpC,oBACIG,OAAA,CAACF,SAAS;IAACK,KAAK,EAAEA;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEnC;AAACL,EAAA,CALuBD,eAAe;EAAA,QACjBJ,gBAAgB;AAAA;AAAAW,EAAA,GADdP,eAAe;AAOvC,OAAO,eAAeQ,MAAMA,CAAC;EAAEC;AAAO,CAAC,EAAE;EACrC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgCF,MAAM,CAACG,EAAE,EAAE,CAAC;EACzE,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IACd,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAgD,CAAC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrH,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO;EAClB;AACJ;AAAC,IAAAZ,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}