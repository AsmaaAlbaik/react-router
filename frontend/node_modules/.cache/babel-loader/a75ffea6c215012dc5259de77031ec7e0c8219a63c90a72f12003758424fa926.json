{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asmaa\\\\OneDrive\\\\Desktop\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  const error = data.message;\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // eslint-disable-next-line no-throw-literal\n    throw new Response(JSON.stringify({\n      message: 'An Error Happened !'\n    }), {\n      status: 500\n    });\n    // throw json({ message: 'An Error Happened !' }, { status: 500 });\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","events","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","_c","loader","response","fetch","ok","Response","JSON","stringify","status","resData","json","$RefreshReg$"],"sources":["C:/Users/asmaa/OneDrive/Desktop/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n    const data = useLoaderData();\r\n    const events = data.events;\r\n    const error = data.message;\r\n    if (error) return <p>{error}</p>\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <EventsList events={events} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n    const response = await fetch('http://localhost:8080/events');\r\n    if (!response.ok) {\r\n        // eslint-disable-next-line no-throw-literal\r\n        throw new Response(JSON.stringify({ message: 'An Error Happened !' }), { status: 500 });\r\n        // throw json({ message: 'An Error Happened !' }, { status: 500 });\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAC5B,MAAMO,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,MAAMC,KAAK,GAAGF,IAAI,CAACG,OAAO;EAC1B,IAAID,KAAK,EAAE,oBAAOL,OAAA;IAAAO,QAAA,EAAIF;EAAK;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAChC,oBACIX,OAAA;IAAKY,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAN,QAAA,eAChCP,OAAA,CAACF,UAAU;MAACM,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEd;AAACT,EAAA,CAVQD,UAAU;EAAA,QACFJ,aAAa;AAAA;AAAAiB,EAAA,GADrBb,UAAU;AAYnB,eAAeA,UAAU;AAEzB,OAAO,eAAec,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEf,OAAO,EAAE;IAAsB,CAAC,CAAC,EAAE;MAAEgB,MAAM,EAAE;IAAI,CAAC,CAAC;IACvF;EACJ,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO;EAClB;AACJ;AAAC,IAAAT,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}