{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asmaa\\\\OneDrive\\\\Desktop\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport async function loader({\n  params\n}) {\n  const response = await fetch(`http://localhost:8080/events/${params.id}`);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch detail for the selected event'\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","params","response","fetch","id","ok","Response","JSON","stringify","message","status","resData","json","$RefreshReg$"],"sources":["C:/Users/asmaa/OneDrive/Desktop/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["\r\nimport { useLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nexport default function EventDetailPage() {\r\n    const data = useLoaderData();\r\n    return (<>\r\n        <EventItem event={data.event} />\r\n    </>);\r\n}\r\n\r\nexport async function loader({ params }) {\r\n    const response = await fetch(`http://localhost:8080/events/${params.id}`);\r\n    if (!response.ok) {\r\n        throw new Response(JSON.stringify({ message: 'Could not fetch detail for the selected event' }), { status: 500 });\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData;\r\n    }\r\n}"],"mappings":";;AACA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAChD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5B,oBAAQG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACJN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAClC,CAAC;AACP;AAACP,EAAA,CALuBD,eAAe;EAAA,QACtBN,aAAa;AAAA;AAAAe,EAAA,GADNT,eAAe;AAOvC,OAAO,eAAeU,MAAMA,CAAC;EAAEC;AAAO,CAAC,EAAE;EACrC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgCF,MAAM,CAACG,EAAE,EAAE,CAAC;EACzE,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IACd,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAgD,CAAC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrH,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO;EAClB;AACJ;AAAC,IAAAZ,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}